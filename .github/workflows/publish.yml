name: Publish Python Package and GitHub Release

on:
  push:
    tags:        
      - '**'

jobs:
  call-test:
    uses: ./.github/workflows/test.yml

  build:
    name: Build distribution package
    runs-on: ubuntu-latest
    needs: [call-test]
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        uv sync --locked --dev --python 3.12 --python-preference only-system
        version=$(uv run --locked python -c 'from importlib.metadata import version; print(version("langchain_mcp"))')
        if [ "$version" != "${{ github.ref_name }}" ]; then
          echo "Built version $version does not match tag ${{ github.ref_name }}, aborting"
          exit 1
        fi
    - name: Build
      run: |
        uv build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distribution
        path: dist/

  publish:
    name: Publish Python distribution package to PyPI
    runs-on: ubuntu-latest
    needs:
    - build
    environment: release
    permissions:
      id-token: write
    steps:
    - name: Download dist
      uses: actions/download-artifact@v4
      with:
        name: python-package-distribution
        path: dist/
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Sign the Python distribution package with Sigstore and upload to GitHub Release
    needs:
    - publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
    - name: Download dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distribution
        path: dist/
    - name: Sign with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'